<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc
            http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/cache
            http://www.springframework.org/schema/cache/spring-cache.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util.xsd"
>

    <!-- 启动对@AspectJ注解的支持 proxy-target-class默认"false",更改为"ture"使用CGLib动态代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--加载jdbc配置文件-->
    <!--<context:property-placeholder location="classpath:config.properties"/>-->
    <!--<util:properties id="conf" location="classpath:config.properties"/>-->

    <!-- default dataSource -->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">

        &lt;!&ndash; 可不用配置driverClassName&ndash;&gt;
        &lt;!&ndash;<property name="driverClassName" value="${jdbc.driverClass}"/>&ndash;&gt;
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        &lt;!&ndash; 配置初始化大小、最小空闲、最大连接数&ndash;&gt;
        <property name="initialSize" value="${druid.initialSize}" />
        <property name="minIdle" value="${druid.minIdle}" />
        <property name="maxActive" value="${druid.maxActive}" />

        &lt;!&ndash; 配置获取连接等待超时的时间 单位毫秒 &ndash;&gt;
        <property name="maxWait" value="60000" />

        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="300000" />

        &lt;!&ndash; 检测连接是否有效的sql，要求是一个查询语句 &ndash;&gt;
        <property name="validationQuery" value="SELECT 1 FROM DUAL" />

        &lt;!&ndash; 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 &ndash;&gt;
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" /> &lt;!&ndash; 申请连接时执行validationQuery检测连接是否有效,不需要检测&ndash;&gt;
        <property name="testOnReturn" value="false" /> &lt;!&ndash; 归还连接时执行validationQuery检测连接是否有效,不需要检测&ndash;&gt;

        &lt;!&ndash; 打开PSCache，如果是mysql，在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。 5.5及以上版本有PSCache，建议开启。 &ndash;&gt;
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="100" />

        &lt;!&ndash; 配置监控统计拦截的filters，去掉后监控界面sql无法统计 &ndash;&gt;
        <property name="filters" value="stat" />

    </bean>-->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!-- 注解方式配置事物 在service中@Transactional -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--  扫描包注解 注意顺序 -->
    <context:component-scan base-package="com.unionlive.app"/>

    <cache:annotation-driven cache-manager="cacheManager"/>

    <!-- 配置简单线程安全Map缓存 -->
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean name="default" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" />
                <bean name="config" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" />
                <bean name="session" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" />
                <bean name="shop" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" />

            </set>
        </property>
    </bean>

    <!-- 引入SQL语句配置 -->
   <!-- <import resource="classpath*:mapper/*-SqlMap.xml"/>-->

</beans>

